// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

import {PoolKey} from "@uniswap/v4-core/src/types/PoolKey.sol";

import {BaseScript} from "./base/BaseScript.sol";

contract SwapScript is BaseScript {
    function run() external {
        PoolKey memory poolKey = PoolKey({
            currency0: currency0,
            currency1: currency1,
            fee: 3000,
            tickSpacing: 60,
            hooks: hookContract // This must match the pool
        });
        bytes memory hookData = hex"504e41550100000003b801000000040d007fd5b7fcf6ac0305dbc6a204d85f0f77bb88d15b68ddea6d1de3b30a5752cee81cb0d50579648ec91e170558b85649076ebc3e3df12e86732d40696c4b8274a9010353f0aa57a983bd109ea4cd89437671382899dc8ba5cecd5637977b5015653d0801f20ffc99224994fb4e68154133868d401554c21ca8a14eb7e5256c724c058000049394548199f099bbc6ae0931e43d5f8295a3087caf0e6981a593eaadda18d8cf048afed237e08237d3ff4fee2de9cfe796f37fc9360c4362329938e13dc9516000069baae469906a82d4f21d6078bbad5dea490cfaf5be46b37a0463c60aa773dae95ce4f11f192667de86bb3dbf40ef5a4f7f625e0cb1d843fcec0191675330a576010864382f58213f6299dc5fa8e0604a016e2064ec7bdb8415508b1735d808821e3a70fbf247d595bef97b42aa8def2da0885934604f1de1616b92434052c3a962b7010a130aa0f76993fdf3ff539b9c7dabc8b32ddfebd4ae2816af4b19add6960c43ab468679cabee72a2d1cefd4d64014664a5a3393363f029ad2f0e1ef2c7a783671000b4f4d4f241eca3fd1dd646a459d5507b6c931276c0c6eca1382b366cce0b83992333060bf87d387911191672638f206eefc0a1aafa6f9bd8da1a80fa9bcb2c242000c00313a4aa373ff4741350dc0d7f69aaaf3ac76734c0ef0bb47307e86fb4e73f871c221078760e5b2ee44481b4c2e97f3ba1d0f25122aca4dd417e52072e05399000dbeec2d38df10037b850e17bf6b5c71783861696fd5e74707425974d9689d3f26494fde06cfa35aa87bc1a89042c748a983ace46aee84bbc84058fa303ef48309000eb71a3b8240aaa0e7d2cbbd905dbda860bac48ba8c3cec6291f401355a5343aad1dbc790c44bf2c4cefc0399bc3ec11ed7c738c09fa722e4ca99701d7adc3d5230110e86b807dd02377d7cc598eda496f5973c36a661dc40995effdc7d10438e07048557c5c354224eb47e489c1830aa247e3d0d67caef29997e8ae79332c3d8384560011750a98198ea675d841104bce435ca26fe21f2d82452d0b1ac370b07cfa0a6c806c84faf9fe57d35dc3c31e5992e9cf0ddcc826318b2793d3ea18be894bd81c4f0012151f80d2f78fc60d2ca5e0d7c07930796bca842cbb5e863107fc645260ea5e4414422c840dc107095fb1fc9b6c53bdd237d17ef4e2b14f344c5c06b0debf5a6e0068d877b500000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000009925b01014155575600000000000e9ffbfb0000271095a8797a3c377a113998737b15cdc7512afae6bf01005500ff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace0000005d98f2af800000000007df88c7fffffff80000000068d877b50000000068d877b50000005d9e9bf7200000000008d519fe0dcfc3a4bb4e49f5d20200cef28d02292baa3e1f558f9e38250809b6e73186757d34868e1576ec068ec863e868e039a70bef9a0f489f6acf59baba7d31967bb5fcf5c9c7078205bd7dc6bbca5f77feff4f55ef2b2086ab9af87eb730cc799cec2eeac0727a2ca5fe6a50d32a52da3719ee6a68e1ac654857bf28209bf220059e18acccf98c91a665d6cf52c75dda7207e116fdf3581b6817265a15c9b8e199463738f68b080919d0e5254b504f7dd2a1a6d596f654744bfd307fc2562aac8ff1835d9b45460ef965be6b75a8da15cf27092b8cf0554cf58418f5a18972b1267f8df0154faeb96f0e9d1e250cc1d574d58690462d16dfa1765a10978b3cff95fd803e41fb59";

        vm.startBroadcast();

        // We'll approve both, just for testing.
        token1.approve(address(swapRouter), type(uint256).max);
        // token0.approve(address(swapRouter), type(uint256).max);

        // Execute swap
        swapRouter.swapExactTokensForTokens{value: 1e15}({
            amountIn: 1e15,
            amountOutMin: 0, // Very bad, but we want to allow for unlimited price impact
            zeroForOne: true,
            poolKey: poolKey,
            hookData: hookData,
            receiver: address(0x23178ccD27CDa5D5D18B211aD6648e189c1e16E1),
            deadline: block.timestamp + 3600
        });

        vm.stopBroadcast();
    }
}
