// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

import {PoolKey} from "@uniswap/v4-core/src/types/PoolKey.sol";

import {BaseScript} from "./base/BaseScript.sol";

contract SwapScript is BaseScript {
    function run() external {
        PoolKey memory poolKey = PoolKey({
            currency0: currency0,
            currency1: currency1,
            fee: 3000,
            tickSpacing: 60,
            hooks: hookContract // This must match the pool
        });
        bytes memory hookData = hex"504e41550100000003b801000000040d006997bd3a0ca69e38026dc99456387aa5777b21706a94970dcc31bbd87726a1d00fa75e09292e3ef50ebcd684321fe66b697c890888f7c1f4b31effae166f132101028403fdc3bcc633b0c085146953998bd23e857661fe5ddc27220d18dc37812a1b7bbfacafb0e1146adc4d5c05f8eecdeac2178b974b54d87b74c36834f86ffc710103a2e8562cda0a84d6976049d075538591323a014275e8c6806d708a89f0f8be012aa480f4b3b3a4d00b89a80d460c4debf3166af318f1194ef71f136a8cb3402c0104ac36b34fa8df205ef805ce5821f3b3a1d1c078c1a2172ef945fc1fb0cdb2dd44271f4643a6a8b8df72dbbe36764578e44b86aef74a247deafad6a19f25219d450106217f69ac6cca3336a7f9036ac362d57ce21424edc64c0f1330da6a3c4ce8fac53ff34cb8048f6298f584e094c28629d81c4185e0e03a1e4a7cc87ef0a19dc30f010860c100045e0445bdb8fd8fa7f843d36838b1235892238c286717b52fcefa4ce00dd737a74e617f0a6360d5b524543366515d9dbae3d21fadca934707c3bca43e010acda3f3f7ae8e0b4da86e4c43c0e2a26cc9bd96364974997521eaabe773fbe3b2720d712ce4331e14a90f2d03bd571e9c92b9f7f392a0e1fbb57948db50d16068010be6d5d86e2cf80edc02d11869c9b60be93f23d7b86d68ec88b366ae6503e7a18a38e8d2517a663c1bde6a7c6aa4b9c40afd61790644bc87d7611b6f215bed7505010c3ad3fd56249d434eabf592b079f5c6cb6787fda5cb052ae9abcf37c14dab859605b3a34ebf80938eee9d07f755c1587ed8af4e85c547dc8441a133af5c0b069e010ddf350e26a57dcdd5f8fdf60dc93f0650367f1588db0f92cd7ed15db24c82c01025a9528c468c3eef2333782e6b55908af38a5ad1dac922f043a0a870b70279c7000e3afe74b7b9d1267a09a26e17df68f9d1e2427b8d24fd554af060a78641b08dff7a2b3f38267516fad765c45148c01ab15ca049b458211b59c8056307c2d986c8011098078a37a50ea86c9b4c82c34b1a9f33242ac405a48f74cbb019a08a578dee054ec74115e7afccb689b7fb3c935fd2ffcd87ad56848d7e279ca4f366f0b6c1f400114bdc627c2de05b8383951c43dab1a33e333f3eb7d6ee00febb52711a4bf339c601389df8c013a9ead52dd6380eae2bec99b2431581a7401b9a67dc6fe87105e50068d8a32a00000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa71000000000992c12b014155575600000000000ea062250000271027546db6449b7f663e322d54afdeb453407b9e2801005500ff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace0000005d361f9d00000000000791ddbffffffff80000000068d8a32a0000000068d8a32a0000005d5183f140000000000889abc70deb2ad91c0e40d2bfaa3d34c7eb533d783f7378378f9e38250809b6e73186757d34868e1576ec068ec863e868e039a70bef9a0f489f6acf59baba7d316de9e4019d08a873a2e63406bcbd68393077ee26fc0f0f14bd2d24f616b2214f7823969f6ea8151c66d4faf88b4252f0b82bf0fbf8552aba1a3f37d5fd75eac0580fd69b301a38519ce975bc58c4f9df3c453e602a6b9f0500da1b832f16f4087f95e36ff0ae51b261f5826bbd7c9354b323dcd1885220a197a5d4277999376a891a2874e472f721c1aa54bcaaf3371212b926477b29779cc51559527decd90d2442cf2a056730d4e16b86ae205ad306efc2fbd9a94b2e3ac02bd8ac6472529a958f190f1893229c";

        vm.startBroadcast();

        // We'll approve both, just for testing.
        token1.approve(address(swapRouter), type(uint256).max);
        // token0.approve(address(swapRouter), type(uint256).max);

        // Execute swap
        swapRouter.swapExactTokensForTokens{value: 1e15}({
            amountIn: 1e15,
            amountOutMin: 0, // Very bad, but we want to allow for unlimited price impact
            zeroForOne: true,
            poolKey: poolKey,
            hookData: hookData,
            receiver: address(0x23178ccD27CDa5D5D18B211aD6648e189c1e16E1),
            deadline: block.timestamp + 3600
        });

        vm.stopBroadcast();
    }
}
